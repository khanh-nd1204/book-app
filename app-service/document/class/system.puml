@startuml

class email_logs {
    - id: string
    - recipient: string
    - subject: string
    - template: string
    - status: int
    - validity: date
    - created_at: date
    - updated_at: date
    + findByStatus(status: int): List<email_logs>
    + findByValidity(validity: date): List<email_logs>
}

class invalidated_tokens {
    - id: string
    - expired_at: date
}

class logs {
    - id: string
    - action_key: string
    - description_key: string
    - params: string
    - created_at: date
    - created_by: string
    + get(id: string): logs
    + create(log: Log): logs
    + search(keyword: string): List<logs>
}

class notifications {
    - id: string
    - user_id: string
    - content: string
    - type: int
    - is_read: int
    - created_at: date
    - updated_at: date
    + get(id: string): notifications
    + create(notification: Notification): notifications
}

class users {

}

users "1" -- "*" notifications : owns

' Nếu logs có thể ghi lại hành động của user, thêm quan hệ Aggregation:
users "1" o-- "*" logs : performs

' Nếu email_logs liên quan đến user recipient:
users "1" o-- "*" email_logs : sends

@enduml
